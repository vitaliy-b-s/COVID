В целом по коду - неплохо. Нет больше детских ошибок и намного приятнее читать. 
По чистоте кода претензий практически нет, за исключением именований аргументов функций и некоторых функций. Оставил комменты

По самому решению есть вопросы - мне оно не нравится. Заполнение глобального объекта данными - это в целом не очень хорошая 
практика. Если у тебя вся прилага - один модуль, то еще куда ни шло. Но когда начинается разделение на модули, получается просто 
каша. Я открываю любой модуль и вижу, что он работает с каким-то непонятным глобальным объектом, который хрен пойми кто и когда
заполнил. Хорошая практика - когда модуль изолирован. То есть когда в нем объявляются функции, работающие только с теми данными, 
которые передаются этим функциям в качестве аргументов. А сами функции при этом должны возвращать результаты свой работы.
В таком случае модуль становится самостоятельной атомарной единицей программы, его можно открыть и прочитать как отдельный кусок 
кода. Если бы твоя программа была реальным приложением для сбора и визуализации статистики, то при количестве модулей > 20 с 
использованеим глобальных объектов это стало бы неподдерживаемым болотом.
Плюс я в целом не вижу в этой прилаге какой-то логики, которая не может обойтись без глобальных объектов. 

Например, модуль graph.js - он использует данные, которые сохранены в модуле data. У него всего одна функция - buildGraph.
Разве нельзя переписать ее так, чтобы она получала данные для графика в качестве аргументов, а не лезла за ними в другой модуль?

Модуль client.js. Разве нельзя переписать так, чтобы функция fetchData просто возвращала данные, а не записывала их в отдельный
объект в другом модулел?

seach.js - аналогично. Тут еще интереснее - твоя функция одновременно и принимает аргументы, и работает с глобальными данными. 

В общем, мне не нравится такой подход и это надо переделать. Рано или поздно ты столкнешься с написанием тестов для своего кода
и тогда ты оценишь разницу в сложности тестирования с использованием глобальных объектов и без - она колоссальная. Пока что 
можешь поверить на слово.

Подумай как исправить то, что я уже описал + комменты по коду. Потом посмотрю еще раз
